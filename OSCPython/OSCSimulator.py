import threading
import pyOSC3 as OSC
import time

breath_sequence_list = [(0.01660, 0.65425, 0.99915),
                        (0.01648, 0.65926, 0.99915),
                        (0.01636, 0.67232, 0.99915),
                        (0.01636, 0.68233, 0.99915),
                        (0.01587, 0.69051, 0.99915),
                        (0.01636, 0.69674, 0.99915),
                        (0.01648, 0.70297, 0.99915),
                        (0.01660, 0.71054, 0.99915),
                        (0.01660, 0.71994, 0.99915),
                        (0.01648, 0.72983, 0.99915),
                        (0.02796, 0.73996, 0.99915),
                        (0.04688, 0.74826, 0.99915),
                        (0.06605, 0.75632, 0.99915),
                        (0.08815, 0.76328, 0.99915),
                        (0.10609, 0.76755, 0.99915),
                        (0.11952, 0.76999, 0.99915),
                        (0.13344, 0.77500, 0.99915),
                        (0.15041, 0.78098, 0.99915),
                        (0.16530, 0.78537, 0.99915),
                        (0.17678, 0.78794, 0.99915),
                        (0.18703, 0.79050, 0.99915),
                        (0.19900, 0.79490, 0.99915),
                        (0.20950, 0.79819, 0.99915),
                        (0.22244, 0.80259, 0.99915),
                        (0.23074, 0.80393, 0.99915),
                        (0.23721, 0.80515, 0.99915),
                        (0.24368, 0.80711, 0.99915),
                        (0.25235, 0.81040, 0.99915),
                        (0.26273, 0.81431, 0.99915),
                        (0.27335, 0.81883, 0.99915),
                        (0.28446, 0.82200, 0.99915),
                        (0.29667, 0.82530, 0.99915),
                        (0.30900, 0.83018, 0.99915),
                        (0.32401, 0.83604, 0.99915),
                        (0.33915, 0.84056, 0.99915),
                        (0.34941, 0.84288, 0.99915),
                        (0.35979, 0.84617, 0.99915),
                        (0.37016, 0.84874, 0.99915),
                        (0.37981, 0.85179, 0.99915),
                        (0.39141, 0.85557, 0.99915),
                        (0.40239, 0.86009, 0.99915),
                        (0.41350, 0.86375, 0.99915),
                        (0.42364, 0.86644, 0.99915),
                        (0.43011, 0.86717, 0.99915),
                        (0.43719, 0.86876, 0.99915),
                        (0.44329, 0.87071, 0.99915),
                        (0.44940, 0.87181, 0.99915),
                        (0.45574, 0.87364, 0.99915),
                        (0.46185, 0.87633, 0.99915),
                        (0.46966, 0.88011, 0.99915),
                        (0.47979, 0.88280, 0.99915),
                        (0.48663, 0.88451, 0.99915),
                        (0.49335, 0.88634, 0.99915),
                        (0.49945, 0.88841, 0.99915),
                        (0.50507, 0.88976, 0.99915),
                        (0.51068, 0.89171, 0.99915),
                        (0.51447, 0.89208, 0.99915),
                        (0.51874, 0.89342, 0.99915),
                        (0.52460, 0.89574, 0.99915),
                        (0.52997, 0.89781, 0.99915),
                        (0.53547, 0.89879, 0.99915),
                        (0.54108, 0.90160, 0.99915),
                        (0.54450, 0.90160, 0.99915),
                        (0.54621, 0.90099, 0.99915),
                        (0.54853, 0.90233, 0.99915),
                        (0.55085, 0.90233, 0.99915),
                        (0.55390, 0.90429, 0.99915),
                        (0.55512, 0.90355, 0.99915),
                        (0.55695, 0.90514, 0.99915),
                        (0.55952, 0.90538, 0.99915),
                        (0.55878, 0.90453, 0.99915),
                        (0.55842, 0.90380, 0.99915),
                        (0.55878, 0.90441, 0.99915),
                        (0.55891, 0.90392, 0.99915),
                        (0.56025, 0.90490, 0.99915),
                        (0.56074, 0.90477, 0.99915),
                        (0.56293, 0.90575, 0.99915),
                        (0.56232, 0.90453, 0.99915),
                        (0.56281, 0.90502, 0.99915),
                        (0.56342, 0.90575, 0.99915),
                        (0.56525, 0.90685, 0.99915),
                        (0.56587, 0.90636, 0.99915),
                        (0.56880, 0.90807, 0.99915),
                        (0.57173, 0.90880, 0.99915),
                        (0.57453, 0.91076, 0.99915),
                        (0.57649, 0.91027, 0.99915),
                        (0.57710, 0.91039, 0.99915),
                        (0.58515, 0.91539, 0.99915),
                        (0.59370, 0.91857, 0.99915),
                        (0.59919, 0.91930, 0.99915),
                        (0.60115, 0.91808, 0.99915),
                        (0.60347, 0.91967, 0.99915),
                        (0.60518, 0.92052, 0.99915),
                        (0.60872, 0.92077, 0.99915),
                        (0.61067, 0.92052, 0.99915),
                        (0.61336, 0.92296, 0.99915),
                        (0.61555, 0.92284, 0.99915),
                        (0.61653, 0.92309, 0.99915),
                        (0.61568, 0.92150, 0.99915),
                        (0.61323, 0.92052, 0.99915),
                        (0.61030, 0.91942, 0.99915),
                        (0.60823, 0.91894, 0.99915),
                        (0.60273, 0.91637, 0.99915),
                        (0.59919, 0.91466, 0.99915),
                        (0.59309, 0.91271, 0.99915),
                        (0.58601, 0.91015, 0.99915),
                        (0.58027, 0.90880, 0.99915),
                        (0.57575, 0.90673, 0.99915),
                        (0.57087, 0.90599, 0.99915),
                        (0.56513, 0.90367, 0.99915),
                        (0.55976, 0.90197, 0.99915),
                        (0.55598, 0.90172, 0.99915),
                        (0.55378, 0.90160, 0.99915),
                        (0.54816, 0.89891, 0.99915),
                        (0.54474, 0.89794, 0.99915),
                        (0.54255, 0.89672, 0.99915),
                        (0.53852, 0.89647, 0.99915),
                        (0.53376, 0.89403, 0.99915),
                        (0.52753, 0.89098, 0.99915),
                        (0.52082, 0.88927, 0.99915),
                        (0.51605, 0.88817, 0.99915),
                        (0.51264, 0.88817, 0.99915),
                        (0.50702, 0.88573, 0.99915),
                        (0.49884, 0.88109, 0.99915),
                        (0.49274, 0.87999, 0.99915),
                        (0.48456, 0.87669, 0.99915),
                        (0.47857, 0.87596, 0.99915),
                        (0.47223, 0.87376, 0.99915),
                        (0.47088, 0.87376, 0.99915),
                        (0.46624, 0.87242, 0.99915),
                        (0.45587, 0.86754, 0.99915),
                        (0.43829, 0.85826, 0.99915),
                        (0.41887, 0.85106, 0.99915),
                        (0.39702, 0.84239, 0.99915),
                        (0.37285, 0.83384, 0.99915),
                        (0.34306, 0.82212, 0.99915),
                        (0.30961, 0.81077, 0.99915),
                        (0.28556, 0.80369, 0.99915),
                        (0.25772, 0.79539, 0.99915),
                        (0.23367, 0.78855, 0.99915),
                        (0.21475, 0.78403, 0.99915),
                        (0.19485, 0.77988, 0.99915),
                        (0.17763, 0.77475, 0.99915),
                        (0.16311, 0.77133, 0.99915),
                        (0.14797, 0.76670, 0.99915),
                        (0.13490, 0.76328, 0.99915),
                        (0.12343, 0.76084, 0.99915),
                        (0.11232, 0.75717, 0.99915),
                        (0.10121, 0.75412, 0.99915),
                        (0.09071, 0.75119, 0.99915),
                        (0.08204, 0.74936, 0.99915),
                        (0.07337, 0.74594, 0.99915),
                        (0.06580, 0.74423, 0.99915),
                        (0.06080, 0.74338, 0.99915),
                        (0.05592, 0.74252, 0.99915),
                        (0.05067, 0.74106, 0.99915),
                        (0.04334, 0.73727, 0.99915),
                        (0.03553, 0.73446, 0.99915),
                        (0.02771, 0.73178, 0.99915),
                        (0.02063, 0.72958, 0.99915),
                        (0.01624, 0.72897, 0.99915),
                        (0.01660, 0.72628, 0.99915),
                        (0.01697, 0.72458, 0.99915),
                        (0.01697, 0.72250, 0.99915),
                        (0.01673, 0.72042, 0.99915),
                        (0.01673, 0.71957, 0.99915),
                        (0.01721, 0.71823, 0.99915),
                        (0.01636, 0.71493, 0.99915),
                        (0.01709, 0.71371, 0.99915),
                        (0.01648, 0.71298, 0.99915),
                        (0.01660, 0.71054, 0.99915),
                        (0.01624, 0.70980, 0.99915),
                        (0.01685, 0.70870, 0.99915),
                        (0.01685, 0.70577, 0.99915),
                        (0.01673, 0.70480, 0.99915),
                        (0.01721, 0.70260, 0.99915),
                        (0.01673, 0.70089, 0.99915),
                        (0.01587, 0.70126, 0.99915),
                        (0.01697, 0.70114, 0.99915),
                        (0.01648, 0.69894, 0.99915),
                        (0.01697, 0.69637, 0.99915),
                        (0.01673, 0.69564, 0.99915),
                        (0.01624, 0.69235, 0.99915),
                        (0.01587, 0.69161, 0.99915),
                        (0.01660, 0.68954, 0.99915),
                        (0.01685, 0.68880, 0.99915),
                        (0.01599, 0.68734, 0.99915),
                        (0.01648, 0.68624, 0.99915),
                        (0.01624, 0.68490, 0.99915),
                        (0.01685, 0.68417, 0.99915),
                        (0.01697, 0.68368, 0.99915),
                        (0.01660, 0.68294, 0.99915),
                        (0.01673, 0.68209, 0.99915),
                        (0.01673, 0.68148, 0.99915),
                        (0.01660, 0.68099, 0.99915),
                        (0.01673, 0.68014, 0.99915),
                        (0.01599, 0.67965, 0.99915),
                        (0.01636, 0.67867, 0.99915),
                        (0.01673, 0.67806, 0.99915),
                        (0.01685, 0.67721, 0.99915),
                        (0.01660, 0.67623, 0.99915),
                        (0.01673, 0.67489, 0.99915),
                        (0.01660, 0.67501, 0.99915),
                        (0.01624, 0.67354, 0.99915),
                        (0.01648, 0.67330, 0.99915),
                        (0.01648, 0.67306, 0.99915),
                        (0.01648, 0.67257, 0.99915),
                        (0.01550, 0.67196, 0.99915),
                        (0.01648, 0.67220, 0.99915),
                        (0.01660, 0.67122, 0.99915),
                        (0.01624, 0.67147, 0.99915),
                        (0.01612, 0.67086, 0.99915),
                        (0.01575, 0.67025, 0.99915),
                        (0.01612, 0.67025, 0.99915),
                        (0.01636, 0.66976, 0.99915),
                        (0.01636, 0.66927, 0.99915),
                        (0.01612, 0.66817, 0.99915),
                        (0.01624, 0.66805, 0.99915),
                        (0.01648, 0.66732, 0.99915),
                        (0.01599, 0.66659, 0.99915),
                        (0.01660, 0.66597, 0.99915),
                        (0.01636, 0.66500, 0.99915),
                        (0.01612, 0.66402, 0.99915),
                        (0.01612, 0.66243, 0.99915),
                        (0.01587, 0.66195, 0.99915),
                        (0.01648, 0.66121, 0.99915),
                        (0.01636, 0.66036, 0.99915),
                        (0.01612, 0.65950, 0.99915),
                        (0.01636, 0.65828, 0.99915),
                        (0.01648, 0.65767, 0.99915),
                        (0.01624, 0.65706, 0.99915),
                        (0.01636, 0.65609, 0.99915),
                        (0.01624, 0.65657, 0.99915),
                        (0.01636, 0.65743, 0.99915),
                        (0.01624, 0.65792, 0.99915),
                        (0.01624, 0.65718, 0.99915),
                        (0.01624, 0.65609, 0.99915),
                        (0.01636, 0.65621, 0.99915),
                        (0.01636, 0.65609, 0.99915),
                        (0.01648, 0.65535, 0.99915),
                        (0.01624, 0.65401, 0.99915),
                        (0.01624, 0.65303, 0.99915),
                        (0.01587, 0.65169, 0.99915),
                        (0.01612, 0.65047, 0.99915),
                        (0.01612, 0.64949, 0.99915),
                        (0.01563, 0.64888, 0.99915),
                        (0.01587, 0.64864, 0.99915),
                        (0.01599, 0.64766, 0.99915),
                        (0.01636, 0.64730, 0.99915),
                        (0.01599, 0.64717, 0.99915),
                        (0.01587, 0.64827, 0.99915),
                        (0.01612, 0.64827, 0.99915),
                        (0.01624, 0.64803, 0.99915),
                        (0.01624, 0.64925, 0.99915),
                        (0.01648, 0.64937, 0.99915),
                        (0.01636, 0.64925, 0.99915),
                        (0.01538, 0.64705, 0.99915),
                        (0.01587, 0.64669, 0.99915),
                        (0.01636, 0.64559, 0.99915),
                        (0.01465, 0.64559, 0.99915),
                        (0.01550, 0.64290, 0.99915),
                        (0.01612, 0.64766, 0.99915),
                        (0.01343, 0.64876, 0.99915),
                        (0.01453, 0.64424, 0.99915),
                        (0.01636, 0.64510, 0.99915),
                        (0.01612, 0.64339, 0.99915),
                        (0.01624, 0.64095, 0.99915),
                        (0.01392, 0.64095, 0.99915),
                        (0.01612, 0.64021, 0.99915),
                        (0.01599, 0.64021, 0.99915),
                        (0.01612, 0.63887, 0.99915),
                        (0.01599, 0.63851, 0.99915),
                        (0.01636, 0.63790, 0.99915),
                        (0.01636, 0.63728, 0.99915),
                        (0.01612, 0.64034, 0.99915),
                        (0.01648, 0.64510, 0.99915),
                        (0.01587, 0.64839, 0.99915),
                        (0.01636, 0.65120, 0.99915),
                        (0.01441, 0.65389, 0.99915),
                        (0.01538, 0.65499, 0.99915),
                        (0.01575, 0.65352, 0.99915),
                        (0.01624, 0.65487, 0.99915),
                        (0.01612, 0.65438, 0.99915),
                        (0.01636, 0.65340, 0.99915),
                        (0.01575, 0.65230, 0.99915),
                        (0.01612, 0.64937, 0.99915),
                        (0.01612, 0.64827, 0.99915),
                        (0.01612, 0.64595, 0.99915),
                        (0.01612, 0.64534, 0.99915),
                        (0.01612, 0.64534, 0.99915),
                        (0.01587, 0.64559, 0.99915),
                        (0.01624, 0.64632, 0.99915),
                        (0.01624, 0.64595, 0.99915),
                        (0.01294, 0.64070, 0.99915),
                        (0.01587, 0.63802, 0.99915),
                        (0.01612, 0.63692, 0.99915),
                        (0.01624, 0.63594, 0.99915),
                        (0.01636, 0.63509, 0.99915),
                        (0.01294, 0.63301, 0.99915),
                        (0.01306, 0.63301, 0.99915),
                        (0.01355, 0.63509, 0.99915),
                        (0.01660, 0.63350, 0.99915),
                        (0.01599, 0.63423, 0.99915),
                        (0.01636, 0.63423, 0.99915),
                        (0.01612, 0.63558, 0.99915),
                        (0.01648, 0.63558, 0.99915),
                        (0.01660, 0.63411, 0.99915),
                        (0.01563, 0.63362, 0.99915),
                        (0.01612, 0.63326, 0.99915),
                        (0.01465, 0.63289, 0.99915),
                        (0.01636, 0.63142, 0.99915),
                        (0.01636, 0.63069, 0.99915),
                        (0.01612, 0.62886, 0.99915),
                        (0.01587, 0.63045, 0.99915),
                        (0.01599, 0.63753, 0.99915)]
baseline_sequence_list = [(0.01660, 0.64168, 0.99915),
                          (0.01673, 0.64070, 0.99915),
                          (0.01721, 0.63924, 0.99915),
                          (0.01697, 0.63899, 0.99915),
                          (0.01685, 0.63863, 0.99915),
                          (0.01697, 0.63826, 0.99915),
                          (0.01648, 0.63814, 0.99915),
                          (0.01709, 0.63838, 0.99915),
                          (0.01697, 0.63948, 0.99915),
                          (0.01709, 0.63985, 0.99915),
                          (0.01660, 0.63851, 0.99915),
                          (0.01709, 0.63826, 0.99915),
                          (0.01673, 0.63814, 0.99915),
                          (0.01709, 0.63887, 0.99915),
                          (0.01673, 0.63851, 0.99915),
                          (0.01685, 0.63875, 0.99915),
                          (0.01685, 0.63973, 0.99915),
                          (0.01673, 0.64034, 0.99915),
                          (0.01721, 0.64131, 0.99915),
                          (0.01697, 0.64009, 0.99915),
                          (0.01685, 0.63960, 0.99915),
                          (0.01673, 0.63899, 0.99915),
                          (0.01697, 0.63960, 0.99915),
                          (0.01685, 0.63948, 0.99915),
                          (0.01697, 0.63912, 0.99915),
                          (0.01697, 0.63973, 0.99915),
                          (0.01709, 0.63912, 0.99915),
                          (0.01673, 0.63826, 0.99915),
                          (0.01673, 0.63753, 0.99915),
                          (0.01721, 0.63704, 0.99915),
                          (0.01697, 0.63716, 0.99915),
                          (0.01721, 0.63838, 0.99915),
                          (0.01673, 0.63863, 0.99915),
                          (0.01709, 0.63790, 0.99915),
                          (0.01685, 0.63728, 0.99915),
                          (0.01709, 0.63716, 0.99915),
                          (0.01673, 0.63753, 0.99915),
                          (0.01660, 0.63802, 0.99915),
                          (0.01599, 0.63570, 0.99915),
                          (0.01685, 0.63606, 0.99915),
                          (0.01685, 0.63545, 0.99915),
                          (0.01660, 0.63765, 0.99915),
                          (0.01709, 0.63765, 0.99915),
                          (0.01673, 0.63741, 0.99915),
                          (0.01709, 0.63716, 0.99915),
                          (0.01697, 0.63655, 0.99915),
                          (0.01648, 0.63619, 0.99915),
                          (0.01697, 0.63728, 0.99915),
                          (0.01685, 0.63875, 0.99915),
                          (0.01697, 0.63924, 0.99915),
                          (0.01709, 0.63912, 0.99915),
                          (0.01685, 0.63912, 0.99915),
                          (0.01685, 0.63960, 0.99915),
                          (0.01673, 0.63973, 0.99915),
                          (0.01709, 0.63924, 0.99915),
                          (0.01697, 0.63899, 0.99915),
                          (0.01685, 0.63973, 0.99915),
                          (0.01660, 0.64009, 0.99915),
                          (0.01685, 0.63960, 0.99915),
                          (0.01697, 0.63912, 0.99915),
                          (0.01734, 0.63997, 0.99915),
                          (0.01697, 0.64058, 0.99915),
                          (0.01697, 0.64095, 0.99915),
                          (0.01685, 0.64083, 0.99915),
                          (0.01697, 0.64070, 0.99915),
                          (0.01660, 0.63985, 0.99915),
                          (0.01685, 0.64034, 0.99915),
                          (0.01709, 0.64168, 0.99915),
                          (0.01673, 0.63887, 0.99915),
                          (0.01697, 0.63777, 0.99915),
                          (0.01697, 0.63912, 0.99915),
                          (0.01697, 0.63973, 0.99915),
                          (0.01685, 0.63924, 0.99915),
                          (0.01685, 0.63814, 0.99915),
                          (0.01697, 0.63692, 0.99915),
                          (0.01685, 0.63643, 0.99915),
                          (0.01709, 0.63728, 0.99915),
                          (0.01697, 0.63790, 0.99915),
                          (0.01709, 0.63912, 0.99915),
                          (0.01709, 0.63838, 0.99915),
                          (0.01709, 0.63814, 0.99915),
                          (0.01685, 0.63753, 0.99915),
                          (0.01697, 0.63899, 0.99915),
                          (0.01685, 0.63912, 0.99915),
                          (0.01673, 0.63790, 0.99915),
                          (0.01673, 0.63802, 0.99915),
                          (0.01673, 0.63875, 0.99915),
                          (0.01709, 0.63875, 0.99915),
                          (0.01685, 0.63802, 0.99915),
                          (0.01685, 0.63777, 0.99915),
                          (0.01697, 0.63777, 0.99915),
                          (0.01721, 0.63887, 0.99915),
                          (0.01685, 0.63936, 0.99915),
                          (0.01660, 0.64144, 0.99915),
                          (0.01709, 0.64107, 0.99915),
                          (0.01697, 0.64119, 0.99915),
                          (0.01697, 0.64131, 0.99915),
                          (0.01685, 0.64046, 0.99915),
                          (0.01685, 0.63997, 0.99915),
                          (0.01685, 0.63960, 0.99915),
                          ]

# global variables for multi-threading
send_breath_flag = 0
lock = threading.Lock()


# signal sender worker process
def signal_sender(c, oscmsg):
    global send_breath_flag

    message_count = 0
    last_flag_setting = send_breath_flag
    baseline_total_message_count = len(baseline_sequence_list)
    breath_total_message_count = len(breath_sequence_list)

    while True:
        # wait for lock
        lock.acquire()

        # initialize breath sequence if SEND_BREATH flag set and currently in baseline state
        if send_breath_flag == 1 and last_flag_setting == 0:
            message_count = 0
            last_flag_setting = 1
            print('Sending Breath')

        # reset to baseline sequence if done with breath frames or baseline sequence done. Reset message counter
        if (message_count == breath_total_message_count and send_breath_flag == 1)\
                or (message_count == baseline_total_message_count and send_breath_flag == 0):
            send_breath_flag = 0  # Only necessary for if in breathing case and done
            last_flag_setting = 0
            message_count = 0
            # print('reset to baseline')

        # send next frame from source
        (v1, v2, v3) = (baseline_sequence_list[message_count-1]
                        if send_breath_flag == 0 else breath_sequence_list[message_count-1])
        oscmsg.append(v1)
        oscmsg.append(v2)
        oscmsg.append(v3)
        c.send(oscmsg)
        oscmsg.clearData()
        # print(' ## Messagecounter: ', message_count, ' ## Flag Setting: ', send_breath_flag,
        #      'V: ', v1, ' ', v2, ' ', v3)

        # increase the messagecounter
        message_count += 1

        # release lock, go to sleep for set cycle time
        lock.release()
        # time.sleep(1/120.0)
        time.sleep(1/100.0)


def main():
    global send_breath_flag

    # set up client object
    c = OSC.OSCClient()
    # c.connect(('192.168.2.17', 9090))  # My LAN IP
    c.connect(('127.0.0.1', 9090))  # localhost = 127.0.0.1
    oscmsg = OSC.OSCMessage()
    oscmsg.setAddress("/inputs/analogue")
    # TODO: low battery simulator

    # start thread to send signals
    signal_thread = threading.Thread(target=signal_sender, args=(c, oscmsg))
    signal_thread.daemon = True  # Daemonize thread
    signal_thread.start()

    # infinite loop to wait for user input to send signals
    while True:
        if send_breath_flag == 1:
            time.sleep(.5)  # Horrible multi-threading code!!!
            # clear buffer
            # input()
            continue

        selection = input('Enter Command\nB - Send Breathe, Q - Quit\n').lower()
        if selection == 'b':
            # acquire lock and set flag so worker process knows ready to send breath
            lock.acquire()
            send_breath_flag = 1
            lock.release()
        elif selection == 'q':
            exit(0)
        else:
            print('invalid option, try again')


if __name__ == '__main__':
    main()
